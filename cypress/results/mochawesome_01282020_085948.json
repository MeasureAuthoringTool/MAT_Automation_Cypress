{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2020-01-28T13:59:11.807Z",
    "end": "2020-01-28T13:59:48.424Z",
    "duration": 36617,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ac09abf9-71cf-4d14-99fe-9914a4006059",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "818b59b2-441b-462a-a08e-8a607e94b4c3",
          "title": "Measure Composer: CQL Workspace: Definition",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Enabled/Disabled QDM Measure Owner",
              "fullTitle": "Measure Composer: CQL Workspace: Definition Enabled/Disabled QDM Measure Owner",
              "timedOut": null,
              "duration": 22275,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(measurelibrary.newMeasureButton).click();\nmeasureName = 'createProportionMeasure' + Date.now();\ncy.get(createNewMeasure.measureName).type(measureName, {\n  delay: 50\n});\ncy.get(createNewMeasure.modelradioQDM).click();\ncy.get(createNewMeasure.cqlLibraryName).type(measureName, {\n  delay: 50\n});\ncy.get(createNewMeasure.shortName).type(measureName, {\n  delay: 50\n});\ncy.get(createNewMeasure.measureScoringListBox).select('Proportion');\ncy.get(createNewMeasure.patientBasedMeasureListBox).select('Yes');\ncy.get(createNewMeasure.saveAndContinueBtn).click();\ncy.get(createNewMeasure.confirmationContinueBtn).click();\nhelper.visibleWithTimeout(matheader.progressbar);\nhelper.notVisibleWithTimeout(matheader.progressbar);\ncy.get(measureComposer.cqlWorkspace).click();\nhelper.visibleWithTimeout(matheader.progressbar);\nhelper.notVisibleWithTimeout(matheader.progressbar);\ncy.get(measureComposer.definition).click();\nhelper.enabled(measureComposer.definitionAddNewBtn);\nhelper.enabled(measureComposer.definitionInformationBtn);\nhelper.enabled(measureComposer.definitionInsertBtn);\nhelper.enabled(measureComposer.definitionExpressionBuilderBtn);\nhelper.enabled(measureComposer.definitionSaveBtn);\nhelper.enabled(measureComposer.definitionEraseBtn);\nhelper.disabled(measureComposer.definitionDeleteBtn);\ncy.get(measurelibrary.measureLibraryTab).click();\nhelper.visibleWithTimeout(matheader.progressbar);\nhelper.notVisibleWithTimeout(matheader.progressbar);",
              "err": {},
              "uuid": "ffa6a4ba-8a8f-4d23-a432-2bc6c0454efd",
              "parentUUID": "818b59b2-441b-462a-a08e-8a607e94b4c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enabled/Disabled FHIR Measure Owner",
              "fullTitle": "Measure Composer: CQL Workspace: Definition Enabled/Disabled FHIR Measure Owner",
              "timedOut": null,
              "duration": 12345,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(measurelibrary.newMeasureButton).click();\nmeasureName = 'createProportionMeasure' + Date.now();\ncy.get(createNewMeasure.measureName).type(measureName, {\n  delay: 50\n});\ncy.get(createNewMeasure.modelradioFHIR).click();\ncy.get(createNewMeasure.cqlLibraryName).type(measureName, {\n  delay: 50\n});\ncy.get(createNewMeasure.shortName).type(measureName, {\n  delay: 50\n});\ncy.get(createNewMeasure.measureScoringListBox).select('Proportion');\ncy.get(createNewMeasure.patientBasedMeasureListBox).select('Yes');\ncy.get(createNewMeasure.saveAndContinueBtn).click();\ncy.get(createNewMeasure.confirmationContinueBtn).click();\nhelper.visibleWithTimeout(matheader.progressbar);\nhelper.notVisibleWithTimeout(matheader.progressbar);\ncy.get(measureComposer.cqlWorkspace).click();\nhelper.visibleWithTimeout(matheader.progressbar);\nhelper.notVisibleWithTimeout(matheader.progressbar);\ncy.get(measureComposer.definition).click();\nhelper.enabled(measureComposer.definitionAddNewBtn);\nhelper.enabled(measureComposer.definitionInformationBtn);\nhelper.enabled(measureComposer.definitionInsertBtn);\nhelper.disabled(measureComposer.definitionExpressionBuilderBtn);\nhelper.enabled(measureComposer.definitionSaveBtn);\nhelper.enabled(measureComposer.definitionEraseBtn);\nhelper.disabled(measureComposer.definitionDeleteBtn);\ncy.get(measurelibrary.measureLibraryTab).click();\nhelper.visibleWithTimeout(matheader.progressbar);\nhelper.notVisibleWithTimeout(matheader.progressbar);",
              "err": {},
              "uuid": "768f46a7-2276-4e72-8947-44adca6e6e93",
              "parentUUID": "818b59b2-441b-462a-a08e-8a607e94b4c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ffa6a4ba-8a8f-4d23-a432-2bc6c0454efd",
            "768f46a7-2276-4e72-8947-44adca6e6e93"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 34620,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "timestamp": "mmddyyyy_HHMMss",
        "json": true
      },
      "version": "4.1.0"
    }
  }
}